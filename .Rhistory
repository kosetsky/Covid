breaks = seq(0, 2000000, 100000),
sec.axis = sec_axis(~./scale, breaks = seq(0, 50, 1), name = "Летальність, %"),
expand = c(0,0),
labels = scales::comma#,trans='log'
) +
labs(y="Кількість заражених", x = "",
title = "Летальність від COVID-19 в різних країнах",
subtitle = paste("Країни з кількістю заражених більше",inf_min)
) + crn_theme +
theme(plot.margin=unit(c(0.5,0.5,0.1,0.1),"cm"),
axis.text.x = element_text(angle = 90, hjust = 1,  vjust = 0.3, size = 13,colour = "grey5"),
axis.text.y = element_text(size = 8),
axis.title.x = element_text(size=14,margin = margin(t = 15)),
axis.title.y = element_text(size=14,colour = "grey35",margin = margin(r = 10,l=10,b=10)))
Letal
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\deaths_countries.png',plot=Letal,
dpi=200, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc1.png',plot=plot1new,
dpi=300, height = 6,width = 10,units = "in")
subtitle<-paste("Країни з загальною кількістю смертей більше 200 на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot4new+ggtitle(""))
subtitle<-paste("Країни з загальною кількістю смертей більше 200 на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot1new+ggtitle(""))
#subtitle<-paste("Країни з загальною кількістю смертей від 80 до 200 на 1 млн. населення")
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min2," до ", pc_death_min1, "на 1 млн. населення")
plot2new<-crn_new(crn2 %>% filter( !Country %in% c("Ecuador","Luxembourg")&Deaths_new_pc<7&
between(total_pc,pc_death_min2,pc_death_min1)&popData2018>700000),
vary = "Deaths_new_pc", varx="date", brk=1, direction = 0, plt = "Set1", n=5, span = 0.45)
# plot4new2
ggplotly(plot2new+ggtitle(""))
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min3," до ", pc_death_min2, "на 1 млн. населення")
plot3new<-crn_new(crn2 %>% filter(Deaths_new_pc<4&
between(total_pc,pc_death_min3,pc_death_min2)&popData2018>2100000),
vary = "Deaths_new_pc",brk=1, direction = 0, plt = "Set1", n=5, span = 0.55)
# plot4new2
ggplotly(plot3new+ggtitle(""))
subtitle<-paste("Країни, де відбувається зростання денної смертності")
plot_new_growth<-crn_new(crn2 %>% filter(!(Country %in% c("Ireland","Ecuador"))&trend>1.13&n>25
&popData2018>2100000&between(totalD30_pc,10,180)),
vary = "Deaths_new_pc", brk=1, direction = 0, plt = "Paired", span = 0.45)
# plot4new2
ggplotly(plot_new_growth+ggtitle(""))
plot_total_pc<-crn_total_death(crn2 %>% filter(total_pc>180&popData2018>2000000),var = "Deaths_pc",min = 100,brk = 100,plt="Paired",linetype = F)
#plot4
ggplotly(plot_total_pc+ggtitle(""))
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\deaths_countries.png',plot=Letal,
dpi=200, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc1.png',plot=plot1new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc2.png',plot=plot2new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc3.png',plot=plot3new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_new_growth.png',plot=plot_new_growth,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_total_pc',plot=plot_total_pc,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_total_pc',plot=plot_total_pc,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_total_pc.png',plot=plot_total_pc,
dpi=300, height = 6,width = 10,units = "in")
total_death_min1<-10000
total_death_min2<-3000
total_death_min3<-700
total_death_min4<-350
total_death_min5<-250
total_death_min6<-150
total_death_min7<-100
total_death_min8<-50
pc_death_min1<-310
pc_death_min2<-90
pc_death_min3<-50
pc_death_min4<-10
subtitle<-paste("Країни з загальною кількістю смертей більше 200 на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot1new+ggtitle(""))
#subtitle<-paste("Країни з загальною кількістю смертей від 80 до 200 на 1 млн. населення")
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min2," до ", pc_death_min1, "на 1 млн. населення")
plot2new<-crn_new(crn2 %>% filter( !Country %in% c("Ecuador","Luxembourg")&Deaths_new_pc<7&
between(total_pc,pc_death_min2,pc_death_min1)&popData2018>700000),
vary = "Deaths_new_pc", varx="date", brk=1, direction = 0, plt = "Set1", n=5, span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot2new+ggtitle(""))
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min3," до ", pc_death_min2, "на 1 млн. населення")
plot3new<-crn_new(crn2 %>% filter(Deaths_new_pc<4&
between(total_pc,pc_death_min3,pc_death_min2)&popData2018>2100000),
vary = "Deaths_new_pc",brk=1, direction = 0, plt = "Set1", n=5, span = 0.55,
subtitle = subtitle)
# plot4new2
ggplotly(plot3new+ggtitle(""))
subtitle<-paste("Країни, де спостерігаєтьcя друга хвиля")
plot_new_sec<-crn_new(crn2 %>% filter(#Deaths_new_pc<3&
between(total_pc,6,1000)&popData2018>2000000&Country %in% c("Austria","Iran","Portugal","Croatia")),
vary = "Deaths_new_pc",brk=1, direction = 0, plt = "Set1", n=5, span = 0.55,
subtitle = subtitle)
# plot4new2
ggplotly(plot_new_sec+ggtitle(""))
subtitle<-paste("Країни, де відбувається зростання денної смертності")
plot_new_growth<-crn_new(crn2 %>% filter(!(Country %in% c("Ireland","Ecuador"))&trend>1.13&n>25
&popData2018>2100000&between(totalD30_pc,10,180)),
vary = "Deaths_new_pc", brk=1, direction = 0, plt = "Paired", span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot_new_growth+ggtitle(""))
subtitle<-paste("Країни з кількістю смертей більше 180  на 1 млн. населення")
plot_total_pc<-crn_total_death(crn2 %>% filter(total_pc>180&popData2018>2000000),var = "Deaths_pc",min = 100,brk = 100,plt="Paired",linetype = F,subtitle = subtitle)
#plot4
ggplotly(plot_total_pc+ggtitle(""))
deth_min<-50
inf_min<-1000
y<-crn3 %>% filter(Infected>inf_min&(region=="Europe"|Country=="Brazil")) %>%
mutate(hjust=ifelse(Country %in% c("Germany","China"),-0.7,0.5),
vjust=ifelse(Country %in% c("Germany","China"),0.3,-2),
hjust=ifelse(Country %in% c("US","Switzerland","Germany","Iran","Turkey","Canada"),0.5,hjust),
vjust=ifelse(Country %in% c("US","Switzerland","Germany","Iran","Turkey","Canada"),1.5,vjust),
)
scale<-50000
Letal<-ggplot(y)  +
#geom_bar(aes(x=Country, y=Infected),stat="identity", fill="tan1", colour="sienna3")+
geom_col(aes(x=reorder(Country,-Infected), y=Infected),fill="indianred2")+
geom_line(aes(x=reorder(Country,-Infected), y=death_rate*scale), color="steelblue4", group = 1, size = 1.5) +
geom_point(aes(x=reorder(Country,-Infected), y=death_rate*scale), color="steelblue4", size = 3) +
geom_text(aes(label=death_rate, x=Country, y=death_rate*scale), colour="steelblue4",vjust =  y$vjust, hjust=y$hjust,size = 3.1)+
#geom_text(aes(label=Response, x=Year, y=0.95*Response), colour="black")+
scale_y_continuous(
#limits = c(0, 3000000),
breaks = seq(0, 2000000, 100000),
sec.axis = sec_axis(~./scale, breaks = seq(0, 50, 1), name = "Летальність, %"),
expand = c(0,0),
labels = scales::comma#,trans='log'
) +
labs(y="Кількість заражених", x = "",
title = "Летальність від COVID-19 в різних країнах",
subtitle = paste("Країни з кількістю заражених більше",inf_min)
) + crn_theme +
theme(plot.margin=unit(c(0.5,0.5,0.1,0.1),"cm"),
axis.text.x = element_text(angle = 90, hjust = 1,  vjust = 0.3, size = 13,colour = "grey5"),
axis.text.y = element_text(size = 8),
axis.title.x = element_text(size=14,margin = margin(t = 15)),
axis.title.y = element_text(size=14,colour = "grey35",margin = margin(r = 10,l=10,b=10)))
Letal
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\deaths_countries.png',plot=Letal,
dpi=200, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc1.png',plot=plot1new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc2.png',plot=plot2new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc3.png',plot=plot3new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_new_growth.png',plot=plot_new_growth,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_total_pc.png',plot=plot_total_pc,
dpi=300, height = 6,width = 10,units = "in")
print('  ')
options(scipen = 999)
total_death_min1<-10000
total_death_min2<-3000
total_death_min3<-700
total_death_min4<-350
total_death_min5<-250
total_death_min6<-150
total_death_min7<-100
total_death_min8<-50
pc_death_min1<-300
pc_death_min2<-90
pc_death_min3<-50
pc_death_min4<-10
subtitle<-paste("Країни з загальною кількістю смертей більше 200 на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot1new+ggtitle(""))
subtitle<-paste("Країни з загальною кількістю смертей більше ",pc_death_min1,"на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot1new+ggtitle(""))
#subtitle<-paste("Країни з загальною кількістю смертей від 80 до 200 на 1 млн. населення")
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min2," до ", pc_death_min1, "на 1 млн. населення")
plot2new<-crn_new(crn2 %>% filter( !Country %in% c("Ecuador","Luxembourg")&Deaths_new_pc<7&
between(total_pc,pc_death_min2,pc_death_min1)&popData2018>700000),
vary = "Deaths_new_pc", varx="date", brk=1, direction = 0, plt = "Set1", n=5, span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot2new+ggtitle(""))
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\deaths_countries.png',plot=Letal,
dpi=200, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc1.png',plot=plot1new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc2.png',plot=plot2new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\death_new_pc3.png',plot=plot3new,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_new_growth.png',plot=plot_new_growth,
dpi=300, height = 6,width = 10,units = "in")
ggsave('D:\\My documents\\!GoogleDrive\\Public\\covid-19\\plot_total_pc.png',plot=plot_total_pc,
dpi=300, height = 6,width = 10,units = "in")
subtitle<-paste("Країни, де відбувається зростання денної смертності")
plot_new_growth<-crn_new(crn2 %>% filter(!(Country %in% c("Ireland","Ecuador"))&trend>1.13&n>25
&popData2018>2100000&between(totalD30_pc,10,180)),
vary = "Deaths_new_pc", brk=1, direction = 0, plt = "Paired", span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot_new_growth+ggtitle(""))
url<-"https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx"
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
start_i<-100
start_d<-5
crn<-crn %>%
group_by(Country) %>%
mutate(Deaths_new_roll = rollmean(Deaths_new,5,fill = NA,align="right") %>% round(digits = 0),
totalD30=Deaths_new[(n()-30):n()] %>% sum(),
totalD30_pc=totalD30*1000000/popData2018,
last7d=Deaths_new[(n()-7):n()] %>% sum(),
last14d=Deaths_new[(n()-15):(n()-8)] %>% sum(),
trend=(last7d/last14d) %>% round(digits = 2)
) %>% ungroup()
crn1<-crn %>%
filter(!Country %in% c("Others","China","Iran")) %>%
filter(Infected>start_i) %>%
group_by(Country) %>%
mutate(ord=1:n(),
total=max(Infected),
totalD=max(Deaths),
n=n(),
death_rate=Deaths) %>%
ungroup()
crn2<-crn %>%
filter(Deaths>start_d) %>%
filter(!Country %in% c("Others","China")) %>%
group_by(Country) %>%
mutate(ord=1:n(),
total=max(Deaths),
total_pc=total*1000000/popData2018,
n=n()) %>%
ungroup() %>%
filter(Deaths_new>=0)
crn3<- crn %>%
filter(!Country %in% c("Others")) %>%
group_by(Country) %>%
mutate(death_rate=(Deaths*100/Infected) %>% round(digits = 1)) %>%
filter(row_number()==n()&Deaths>1) %>% ungroup() %>%
arrange(Infected %>% desc())
crn_theme<-
theme_minimal() +
theme(
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(2,"cm"),
#legend.position="top",
plot.margin=unit(c(0.5,0.5,0.5,0.5),"cm"),
axis.title.x = element_text(size=14,colour = "grey30",margin = margin(t = 15)),
axis.title.y = element_text(size=14,colour = "grey30",margin = margin(r = 15)),
axis.text.x = element_text(size=10,colour = "grey40"),
axis.text.y = element_text(size=11,colour = "grey40"),
plot.title = element_text(size=18,colour = "grey5"),
plot.subtitle = element_text(size=13,colour = "grey45")
)
crn_new <- function(data,vary="Deaths_new_pc",varx="date",min=0,max=1000000,nn=10,span=0.45, brk=50, plt="Set1", direction=1, region="all",subtitle="") {
ylab<-case_when(
vary=="Deaths_new" ~ "Кількість нових смертей в день",
vary=="Deaths_new_pc" ~ "Денна смерність на 1 млн",
TRUE ~ "Кількість нових випадків в день")
xlab<- ifelse(varx=="ord",paste0("Кількість днів починаючи від ",start_d," смертей"),"")
titlelab<-case_when(
vary=="Deaths_new" ~ "Кількість нових смертей від COVID-19",
vary=="Deaths_new_pc" ~ "Кількість нових смертей від COVID-19 на 1 млн. населення",
TRUE ~ "Кількість нових випадків в день" )
plot<-ggplot(data, aes_string(x=varx,y=vary,color = "Country")) +
geom_point(size=1.5,alpha = 0.3) +
geom_smooth(method = "loess", se=F,size=1.5, span = span) +
#stat_smooth(aes(y=Deaths_new, x=ord), formula = y ~ s(x, k = 5), method ="gam", se = FALSE,size=1.5) +
#stat_smooth(aes(y=Deaths_new, x=ord), method = "lm",formula = y ~ poly(x, 5), se = FALSE,size=1.5) +
#scale_x_continuous(breaks = seq(5, 200, 10)) +
{if (varx=="ord") scale_x_continuous(breaks = seq(5, 200, 10))} +
{if (varx=="date") scale_x_date(date_breaks="2 weeks",date_labels = "%b-%e") } +
scale_y_continuous(breaks = seq(0, 7000, brk)
,limits = c(0,max(data[,c(vary)])+0.5*brk)
#,limits = c(-5,3000)
) +
#scale_linetype_discrete() +
#scale_linetype_identity() +
#scale_linetype_manual(values=sample(c(1,2), nrow(x),replace = T))+
labs(y=ylab, x = xlab,
title = titlelab,
subtitle = subtitle
) +
crn_theme +   scale_color_brewer(palette = plt,direction = direction) +
theme(plot.title = element_text(colour = "red3"))
return(plot)
}
crn_total_death <- function(data, var="Deaths", min, max=1000000, min_pc=0, brk=2000, plt="Set1", direction=1,subtitle="",linetype=T){
ylab<-ifelse(var=="Deaths","Загальна кількість померлих","Кількість померлих на 1 млн. населення")
titlelab<-ifelse(var=="Deaths","Загальна кількість смертей від COVID-19 в різних країнах",
"Загальна кількість смертей від COVID-19 (на 1 млн населення)")
plot<-ggplot(data %>% filter(between(total,min,max)&total*total_pc>min_pc),
aes_string(x="ord",y=var)) + {
if (linetype==F)  geom_line(aes(color = Country), size=1.5) } + {
if (linetype)  geom_line(aes(color = Country, linetype = Country),size=1.5) } + {
if (linetype)  scale_linetype_manual(values=sample(c(1,2), nrow(data),replace = T)) } +
scale_x_continuous(breaks = seq(5, 360, 5)) +
scale_y_continuous(breaks = seq(0,  300000, brk)) +
#scale_linetype_discrete() +
#scale_linetype_identity() +
#scale_linetype_manual(values=sample(c(1,2), nrow(x),replace = T))+
labs(y=ylab, x = paste0("Кількість днів починаючи від ",start_d," смертей"),
title = titlelab,
subtitle = subtitle
#, caption = "My caption"
)+
crn_theme +   scale_color_brewer(palette = plt,direction = direction)+
theme(plot.title = element_text(colour = "royalblue3"))
return(plot)
}
total_death_min1<-10000
total_death_min2<-3000
total_death_min3<-700
total_death_min4<-350
total_death_min5<-250
total_death_min6<-150
total_death_min7<-100
total_death_min8<-50
pc_death_min1<-300
pc_death_min2<-90
pc_death_min3<-50
pc_death_min4<-10
subtitle<-paste("Країни з загальною кількістю смертей більше ",pc_death_min1,"на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot1new+ggtitle(""))
#subtitle<-paste("Країни з загальною кількістю смертей від 80 до 200 на 1 млн. населення")
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min2," до ", pc_death_min1, "на 1 млн. населення")
plot2new<-crn_new(crn2 %>% filter( !Country %in% c("Ecuador","Luxembourg")&Deaths_new_pc<7&
between(total_pc,pc_death_min2,pc_death_min1)&popData2018>700000),
vary = "Deaths_new_pc", varx="date", brk=1, direction = 0, plt = "Set1", n=5, span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot2new+ggtitle(""))
View(crn2)
View(crn1)
View(crn)
url<-"https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx"
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
View(crn)
url<-"https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide.xlsx"
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
#crn <- read_excel("D:\\Downloads\\COVID-19-geographic-disbtribution-worldwide-2020-03-22.xlsx") %>%
crn <- read_excel(tf) %>% rename(date=dateRep,Country=7,Infected_new=cases,Deaths_new=deaths,
region=continentExp)
View(crn)
#crn <- read_excel("D:\\Downloads\\COVID-19-geographic-disbtribution-worldwide-2020-03-22.xlsx") %>%
crn <- read_excel(tf) %>% rename(date=dateRep,Country=7,Infected_new=cases,Deaths_new=deaths,
region=continentExp) %>%
mutate(Deaths_new=ifelse(Country=="France"&date=="2020-04-03",1355,Deaths_new),
Deaths_new=ifelse(Country=="France"&date=="2020-04-04",1120,Deaths_new),
Deaths_new=ifelse(Country=="France"&date=="2020-05-18",300,Deaths_new),
Deaths_new=ifelse(Country=="France"&date=="2020-05-20",183,Deaths_new),
Deaths_new=ifelse(Country=="Spain"&date=="2020-04-27",331,Deaths_new),
Deaths_new=ifelse(Country=="Spain"&date=="2020-04-28",301,Deaths_new),
Deaths_new=ifelse(Country=="Spain"&date=="2020-04-29",325,Deaths_new),
Deaths_new=ifelse(Country=="Germany"&date=="2020-05-01",193,Deaths_new),
Deaths_new=ifelse(Country=="Germany"&date=="2020-05-02",94,Deaths_new),
date=as.Date(date)-1,
Country=str_replace(Country,"United States of America|United_States_of_America","USA"),
Country=str_replace(Country,"United Kingdom|United kingdom|United_Kingdom","UK"),
Country=str_replace(Country,"_"," ")
) %>%
select(-c(day,month,year)) %>%
arrange(Country,date) %>%
complete(nesting(Country),date=seq.Date(as.Date("2019-12-30"),Sys.Date()-1,by="day")) %>%
group_by(Country) %>%
#complete(date=seq.Date(as.Date("2019-12-30"),Sys.Date()-1,by="day")) %>%
mutate(Infected=cumsum(replace_na(Infected_new,0)),
Deaths=cumsum(replace_na(Deaths_new,0)),
geoId=max(geoId,na.rm = T),
popData2018=max(popData2018,na.rm = T),
region=max(region,na.rm = T),
letal=Deaths*100/Infected,
) %>%
ungroup() %>%
mutate(
Deaths_pc=Deaths*1000000/popData2018,
Deaths_new_pc=Deaths_new*1000000/popData2018,
Infected=ifelse(Country=="Italy"&date=="2020-03-14",21157,Infected),
Deaths=ifelse(Country=="Italy"&date=="2020-03-14",1441,Deaths),
Infected=ifelse(Country=="Norway"&date=="2020-03-13",800,Infected),
Infected=ifelse(Country=="Switzerland"&date=="2020-03-16",2353,Infected),
Deaths=ifelse(Country=="Switzerland"&date=="2020-03-16",15,Deaths),
Deaths=ifelse(Country=="US"&date=="2020-03-19",200,Deaths),
#Deaths_new = ifelse(is.na(Deaths_new)|Deaths_new==0,Deaths-lag(Deaths),Deaths_new)
) %>%
filter(!(Country=="Spain" & date==Sys.Date()-1)) %>%
filter(!str_detect(Country,"international"))
View(crn)
start_i<-100
start_d<-5
crn<-crn %>%
group_by(Country) %>%
mutate(Deaths_new_roll = rollmean(Deaths_new,5,fill = NA,align="right") %>% round(digits = 0),
totalD30=Deaths_new[(n()-30):n()] %>% sum(),
totalD30_pc=totalD30*1000000/popData2018,
last7d=Deaths_new[(n()-7):n()] %>% sum(),
last14d=Deaths_new[(n()-15):(n()-8)] %>% sum(),
trend=(last7d/last14d) %>% round(digits = 2)
) %>% ungroup()
crn1<-crn %>%
filter(!Country %in% c("Others","China","Iran")) %>%
filter(Infected>start_i) %>%
group_by(Country) %>%
mutate(ord=1:n(),
total=max(Infected),
totalD=max(Deaths),
n=n(),
death_rate=Deaths) %>%
ungroup()
crn2<-crn %>%
filter(Deaths>start_d) %>%
filter(!Country %in% c("Others","China")) %>%
group_by(Country) %>%
mutate(ord=1:n(),
total=max(Deaths),
total_pc=total*1000000/popData2018,
n=n()) %>%
ungroup() %>%
filter(Deaths_new>=0)
crn3<- crn %>%
filter(!Country %in% c("Others")) %>%
group_by(Country) %>%
mutate(death_rate=(Deaths*100/Infected) %>% round(digits = 1)) %>%
filter(row_number()==n()&Deaths>1) %>% ungroup() %>%
arrange(Infected %>% desc())
crn_theme<-
theme_minimal() +
theme(
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(2,"cm"),
#legend.position="top",
plot.margin=unit(c(0.5,0.5,0.5,0.5),"cm"),
axis.title.x = element_text(size=14,colour = "grey30",margin = margin(t = 15)),
axis.title.y = element_text(size=14,colour = "grey30",margin = margin(r = 15)),
axis.text.x = element_text(size=10,colour = "grey40"),
axis.text.y = element_text(size=11,colour = "grey40"),
plot.title = element_text(size=18,colour = "grey5"),
plot.subtitle = element_text(size=13,colour = "grey45")
)
subtitle<-paste("Країни з загальною кількістю смертей більше ",pc_death_min1,"на 1 млн. населення")
#&!(Country=="US"&date %in%as.Date(c("2020-04-15","2020-04-17","2020-04-23")))
plot1new<-crn_new(crn2 %>% filter(total_pc>pc_death_min1&Deaths_new_pc<25&popData2018>700000&
!(Country=="Spain"&date=="2020-05-21")),
vary = "Deaths_new_pc", varx="date",min=total_death_min2,brk=5,direction = -1,plt = "Set1", span = 0.5,subtitle = subtitle)
#plot4new
ggplotly(plot1new+ggtitle(""))
#subtitle<-paste("Країни з загальною кількістю смертей від 80 до 200 на 1 млн. населення")
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min2," до ", pc_death_min1, "на 1 млн. населення")
plot2new<-crn_new(crn2 %>% filter( !Country %in% c("Ecuador","Luxembourg")&Deaths_new_pc<7&
between(total_pc,pc_death_min2,pc_death_min1)&popData2018>700000),
vary = "Deaths_new_pc", varx="date", brk=1, direction = 0, plt = "Set1", n=5, span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot2new+ggtitle(""))
#subtitle<-paste("Країни з загальною кількістю смертей від 80 до 200 на 1 млн. населення")
subtitle<-paste("Країни з загальною кількістю смертей від ",pc_death_min2," до ", pc_death_min1, "на 1 млн. населення")
plot2new<-crn_new(crn2 %>% filter( !Country %in% c("Ecuador","Luxembourg")&Deaths_new_pc<7&
between(total_pc,pc_death_min2,pc_death_min1)&popData2018>700000),
vary = "Deaths_new_pc", varx="date", brk=1, direction = 0, plt = "Set1", n=5, span = 0.45,
subtitle = subtitle)
# plot4new2
ggplotly(plot2new+ggtitle(""))
View(crn)
crn %>% filter(Country=="Spain") %>% arrange(desc(date)) %>% View()
txt<-"1992 1994 1996 1998 2000 2002 2004 2006 2008 2010 2012 2013 2014 2015 2016 2017 2018
36.8 36.7 36.9 37.6 39.1 38.2 38.4 38.0 42.0 41.7 42.9 38.7 43.2 43.0 42.2 41.0 43.8
29.0 32.4 33.1 33.4 36.0 33.2 34.3 39.2 36.8 34.9 35.4 37.9 31.2 25.6 32.2 28.7 31.4
32.0 29.4 29.6 28.4 24.8 28.0 26.3 22.6 19.9 22.1 20.9 22.8 24.7 30.4 25.4 29.2 24.8
2.0 0.7 0.4 0.5 0.2 0.5 0.9 0.3 0.8 0.9 0.3 0.6 0.7 0.6 0.1 0.6 0.0
0.2 0.8 0.0 0.1 0.0 0.1 0.1 0.0 0.4 0.4 0.4 0.1 0.2 0.4 0.1 0.5 0.0
"
x<-read.table(txt,sep = " ")
x<-read.csv(txt,sep = " ")
x<-read_table(txt,sep = " ")
x<-read_table(txt)
View(x)
x<-read.table(text = txt)
View(x)
x<-read.table(text = txt,header = T)
View(x)
write_clip(x)
